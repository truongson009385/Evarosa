@model ProductViewModel

@{
    ViewBag.Title = "Cập nhật sản phẩm";
    Layout = "_AdminLayout";
    var countImg = 1;
}

<div class="box_header">
    <h2>@ViewBag.Title</h2>
    <div class="list-group list-group-horizontal">
        <a class="btn quick-link mr-2" asp-action="ListProduct"><i class="fa-solid fa-pen mr-2"></i>Danh sách sản phẩm</a>
    </div>
</div>
<div class="box_content">
    @using (Html.BeginForm("UpdateProduct", "ProductVcms", FormMethod.Post, new { enctype = "multipart/form-data", @id = "product-form" }))
    {
        <div class="row">
            <div class="col-12">
                @Html.ValidationSummary(true)
                <input type="hidden" asp-for="Product.Id" id="productId" />
                <table class="form_table">
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.ProductCategoryId)</td>
                        <td class="form_text pb-3">
                            <select asp-for="Product.ProductCategoryId" class="select2 form_control" asp-items="ViewBag.categories" style="width: 300px;">
                                <option value="">Chọn danh mục sản phẩm</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Name)</td>
                        <td class="form_text">@Html.EditorFor(model => model.Product.Name)</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.ShortDescription)</td>
                        <td class="form_text">
                            <textarea asp-for="Product.ShortDescription" rows="5"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.MaSP)</td>
                        <td class="form_text">@Html.EditorFor(model => model.Product.MaSP)</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Url)</td>
                        <td class="form_text">@Html.EditorFor(model => model.Url)</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Price) (VND)</td>
                        <td class="form_text">@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "input-number" } })</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.PriceSale) (VND)</td>
                        <td class="form_text">@Html.EditorFor(model => model.PriceSale, new { htmlAttributes = new { @class = "input-number" } })</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Images)</td>
                        <td class="form_text">
                            <div class="alert alert-info">
                                <button type="button" class="btn btn-primary" onclick="selectMultipleFileWithCKFinder()">Chọn ảnh từ CKFinder</button>
                            </div>
                            <div id="progress" class="progress" style="display:none;">
                                <div class="progress-bar progress-bar-success"></div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name"></td>
                        <td class="form_text">
                            <ul id="ListImages">
                                @foreach (var img in Model.Product.ArrImage)
                                {
                                    <li>
                                        @if (img.StartsWith("/ckfinder/"))
                                        {
                                            <input type="hidden" name="Images" value="@img" />
                                            <img src="@img" alt="item" />
                                        }
                                        else
                                        {
                                            <input type="hidden" name="Images" value="@PathSystem.Combine("/contents/products/",img)" />
                                            <img src="@PathSystem.Combine("/contents/products/",img)" alt="item" />
                                        }
                                        <a href="javascript:;" id="@countImg" onclick="delfile('@countImg')"><i class="fa-solid fa-xmark"></i></a>
                                    </li>
                                    countImg = countImg + 1;
                                }
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Content)</td>
                        <td class="form_text">
                            <textarea asp-for="Product.Content" class="ckeditor"> </textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Title)</td>
                        <td class="form_text">@Html.EditorFor(model => model.Product.Title)</td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Description)</td>
                        <td class="form_text">
                            <textarea asp-for="Product.Description" rows="5"> </textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Sort)</td>
                        <td class="form_text">
                            <input asp-for="Product.Sort" />
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.Active)</td>
                        <td class="form_text">
                            <input asp-for="Product.Active" checked />
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.ShowOutstanding)</td>
                        <td class="form_text">
                            <input asp-for="Product.ShowOutstanding" />
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.ShowHome)</td>
                        <td class="form_text">
                            <input asp-for="Product.ShowHome" />
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name">@Html.LabelFor(model => model.Product.IsOrder)</td>
                        <td class="form_text">
                            <input asp-for="Product.IsOrder" />
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name"></td>
                        <td class="form_text d-flex justify-content-between align-items-center border-bottom pb-3">
                            <label class="mb-0">Tạo thuộc tính</label>
                            <button type="button" class="create-attr btn btn-dark">Tạo</button>
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name"></td>
                        <td class="form_text pt-3">
                            @if (Model.Options.Any())
                            {
                                @foreach (var item in Model.Options)
                                {
                                    <div class="form-group">
                                        <label>@item.Name</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">
                                                    <input name="attribute" value="@item.Id" type="checkbox" class="mb-0" checked="@(Model.OptionProductVcms != null && item.Id == Model.OptionProductVcms.Id ? "checked" : null)">
                                                </div>
                                            </div>
                                            <input name="value" data-attr="@item.Id" value="@(Model.OptionProductVcms != null && item.Id == Model.OptionProductVcms.Id ? Model.OptionProductVcms.Options : null)">
                                        </div>
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name"></td>
                        <td class="attrs-wrapper form_text pt-3">
                            @if (!string.IsNullOrEmpty(Model.SkuProduct.FirstItem))
                            {
                                <partial name="UpdateListSku" model="Model" />
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="form_name"></td>
                        <td class="form_text">
                            <input type="submit" class="btn quick-link" value="Cập nhật" />
                        </td>
                    </tr>
                </table>
            </div>
            <div class="col-5">
                <table class="form_table" id="tableItemInfo">
                </table>
            </div>
        </div>
    }
</div>

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(".input-number").maskMoney({
            precision: 0,
            thousands: ','
        });

        $('[name=value]').tagify();

        $('input[name="attribute"]').on('change', function () {
            if ($('input[name="attribute"]:checked').length > 1) {
                $(this).prop('checked', false);
                alert("Chỉ được chọn tối đa 1 lựa chọn!");
            }
        });

        $('.create-attr').click(function () {
            let arr = [];
            let ids = [];

            $('input[name="attribute"]:checked').each(function () {
                let id = $(this).val();
                let parsedData = JSON.parse($(`input[data-attr="${id}"]`).val());

                let value = parsedData.map(function (tag) {
                    var result = tag.value;

                    return result;
                }).join(',');

                arr.push(value);
                ids.push(id);
            });

            if (arr.length > 0) {
                $.post("@Url.Action("ListSku", "ProductVcms")", {
                    attrs: arr,
                    ids: ids,
                }, function (data) {
                    $(".attrs-wrapper").empty();
                    $(".attrs-wrapper").html(data);
                });
            }
        });

        $(function () {
            $("#ListImages").sortable();
            $("#ListImages").disableSelection();
        });
        var i = @countImg;
        function selectMultipleFileWithCKFinder() {
            CKFinder.popup({
                chooseFiles: true,
                chooseMultiple: true,
                width: 800,
                height: 600,
                onInit: function (finder) {
                    finder.on('files:choose', function (evt) {
                        evt.data.files.forEach(function (file) {
                            /*var file = evt.data.files.first();*/
                            var fileUrl = file.getUrl();

                            // Validate file type and size (Note: CKFinder does not provide file size, so size validation is skipped)
                            var uploadErrors = [];
                            var acceptFileTypes = /\.(gif|jpe?g|png)$/i;
                            if (!acceptFileTypes.test(fileUrl)) {
                                uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                            }

                            var totalImg = $("#ListImages .thumb-img-box").length;
                            if (totalImg >= 10) {
                                uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                            }
                            if (uploadErrors.length > 0) {
                                alert(uploadErrors.join("\n"));
                                return false;
                            }
                            // Append image to list
                            $('#ListImages').append(
                                '<li class="thumb-img-box">' +
                                '<input type="hidden" name="Images" value ="' +
                                fileUrl +
                                '" />' +
                                '<img src="' +
                                fileUrl +
                                '" alt="Image"/>' +
                                '<a href="javascript:;" id="' +
                                i +
                                '" onclick="delfile(' +
                                i +
                                ')">' +
                                '<i class="fa-solid fa-xmark"></i>' +
                                '</a>' +
                                '</li>'
                            );
                            i++;
                        });
                    });

                    //finder.on('file:choose:resizedImage', function (evt) {
                    //    evt.data.resizedFiles.forEach(function (file) {
                    //        var fileUrl = file.getUrl();
                    //        // Validate file type and size
                    //        var uploadErrors = [];
                    //        var acceptFileTypes = /\.(gif|jpe?g|png)$/i;
                    //        if (!acceptFileTypes.test(fileUrl)) {
                    //            uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                    //        }

                    //        var totalImg = $("#ListImages .thumb-img-box").length;
                    //        if (totalImg >= 10) {
                    //            uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                    //        }
                    //        if (uploadErrors.length > 0) {
                    //            alert(uploadErrors.join("\n"));
                    //            return false;
                    //        }
                    //        $('#ListImages').append(
                    //            '<li class="thumb-img-box">' +
                    //            '<input type="hidden" name="Pictures" value ="' + fileUrl + '" />' +
                    //            '<img src="' + fileUrl + '?w=80&h=80" alt="Image"/>' +
                    //            '<a href="javascript:;" id="' + i + '" onclick="delfile(' + i + ')">' +
                    //            '<img src="/content/admin/icon-delete.png" alt="Delete" style="vertical-align:middle" />' +
                    //            '</a>' +
                    //            '</li>'
                    //        );
                    //        i++;

                    //    })
                    //});
                }
            });
        }

        function delfile(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }
    </script>
}
